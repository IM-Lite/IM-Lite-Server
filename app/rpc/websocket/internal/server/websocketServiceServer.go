// Code generated by goctl. DO NOT EDIT!
// Source: websocket.proto

package server

import (
	"context"

	"github.com/IM-Lite/IM-Lite-Server/app/rpc/websocket/internal/logic"
	"github.com/IM-Lite/IM-Lite-Server/app/rpc/websocket/internal/svc"
	"github.com/IM-Lite/IM-Lite-Server/app/rpc/websocket/pb"
)

type WebsocketServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedWebsocketServiceServer
}

func NewWebsocketServiceServer(svcCtx *svc.ServiceContext) *WebsocketServiceServer {
	return &WebsocketServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *WebsocketServiceServer) SendMsg(ctx context.Context, in *pb.SendMsgReq) (*pb.SendMsgResp, error) {
	l := logic.NewSendMsgLogic(ctx, s.svcCtx)
	return l.SendMsg(in)
}

func (s *WebsocketServiceServer) PullMsgBySeq(ctx context.Context, in *pb.PullMsgBySeqReq) (*pb.PullMsgBySeqResp, error) {
	l := logic.NewPullMsgBySeqLogic(ctx, s.svcCtx)
	return l.PullMsgBySeq(in)
}

func (s *WebsocketServiceServer) ClearUnreadCount(ctx context.Context, in *pb.ClearUnreadCountReq) (*pb.ClearUnreadCountResp, error) {
	l := logic.NewClearUnreadCountLogic(ctx, s.svcCtx)
	return l.ClearUnreadCount(in)
}

func (s *WebsocketServiceServer) DeleteConversation(ctx context.Context, in *pb.DeleteConversationReq) (*pb.DeleteConversationResp, error) {
	l := logic.NewDeleteConversationLogic(ctx, s.svcCtx)
	return l.DeleteConversation(in)
}

func (s *WebsocketServiceServer) DeleteConversationAllMsg(ctx context.Context, in *pb.DeleteConversationAllMsgReq) (*pb.DeleteConversationAllMsgResp, error) {
	l := logic.NewDeleteConversationAllMsgLogic(ctx, s.svcCtx)
	return l.DeleteConversationAllMsg(in)
}

func (s *WebsocketServiceServer) ListUserConversation(ctx context.Context, in *pb.ListUserConversationReq) (*pb.ListUserConversationResp, error) {
	l := logic.NewListUserConversationLogic(ctx, s.svcCtx)
	return l.ListUserConversation(in)
}

func (s *WebsocketServiceServer) UpdateSubscribedConversations(ctx context.Context, in *pb.UpdateSubscribedConversationsReq) (*pb.UpdateSubscribedConversationsResp, error) {
	l := logic.NewUpdateSubscribedConversationsLogic(ctx, s.svcCtx)
	return l.UpdateSubscribedConversations(in)
}

func (s *WebsocketServiceServer) ListAllSubscribersByConversation(ctx context.Context, in *pb.ListAllSubscribersByConversationReq) (*pb.ListAllSubscribersByConversationResp, error) {
	l := logic.NewListAllSubscribersByConversationLogic(ctx, s.svcCtx)
	return l.ListAllSubscribersByConversation(in)
}

func (s *WebsocketServiceServer) CreateConversation(ctx context.Context, in *pb.CreateConversationReq) (*pb.CreateConversationResp, error) {
	l := logic.NewCreateConversationLogic(ctx, s.svcCtx)
	return l.CreateConversation(in)
}
